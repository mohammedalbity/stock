"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _aura = _interopRequireDefault(await jitiImport("@primevue/themes/aura"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default =
defineNuxtConfig({
  devtools: { enabled: true },
  compatibilityDate: "2025-01-19",
  modules: ["nuxt-auth-sanctum", "@primevue/nuxt-module"],
  css: ["~/assets/css/main.css"],
  /* app: {
       head: {
           htmlAttrs: { dir: 'rtl', lang: 'ar' },
       },
   },*/
  postcss: {
    plugins: {
      tailwindcss: {},
      autoprefixer: {}
    }
  },
  primevue: {
    autoImport: false,
    components: {
      include: ['Button', 'Card', 'Forms', 'InputText']
    },
    options: {
      theme: {
        preset: _aura.default,
        options: {
          cssLayer: {
            name: 'primevue',
            order: 'tailwind-base, primevue, tailwind-utilities'
          }
        }
      }
    }
  },
  sanctum: {
    mode: 'token',
    userStateKey: 'sanctum.user.identity',
    redirectIfAuthenticated: false,
    redirectIfUnauthenticated: false,
    endpoints: {
      csrf: '/sanctum/csrf-cookie',
      login: '/api/login',
      logout: '/api/logout',
      user: '/api/user'
    },
    csrf: {
      cookie: 'XSRF-TOKEN',
      header: 'X-XSRF-TOKEN'
    },
    client: {
      retry: false,
      initialRequest: true
    },
    redirect: {
      keepRequestedRoute: true,
      onLogin: '/',
      onLogout: '/',
      onAuthOnly: '/login',
      onGuestOnly: '/'
    },
    globalMiddleware: {
      enabled: false,
      allow404WithoutAuth: true
    },
    logLevel: 3,
    appendPlugin: false
  }
}); /* v9-7ce354be64f034da */
